version: '3.8'

services:
  db:
    image: postgres:15.4
    container_name: db-container
    restart: always
    environment:
      POSTGRES_DB: "housi_db"
      POSTGRES_USER: "housi"
      POSTGRES_PASSWORD: "secret123"
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - app_local_network

  otel-collector:
    image: otel/opentelemetry-collector-contrib
    container_name: otel-container
    volumes:
      - .docker/otel/otel-collector-config.yaml:/etc/otelcol-contrib/config.yaml
    networks:
      - app_local_network
    ports:
      - "4317:4317" # OTLP gRPC receiver
#      - "1888:1888" # pprof extension
#      - "8888:8888" # Prometheus' metrics exposed by the Collector
#      - "8889:8889" # Prometheus exporter metrics
#      - "13133:13133" # health_check extension
#      - "4318:4318" # OTLP http receiver
#      - "55679:55679" # zpages extension

  # To eventually offload to Tempo...
  tempo:
    image: grafana/tempo:latest
    container_name: tempo-container
    command: [ "-config.file=/etc/tempo.yaml" ]
    user: "1000:1000"
    volumes:
      - .docker/tempo/tempo.yaml:/etc/tempo.yaml
      - ./tempo_data:/tmp/tempo
    ports:
      - "14268"  # jaeger ingest
      - "3200"   # tempo
      - "4317"  # otlp grpc
      - "4318"  # otlp http
      - "9411"   # zipkin
    networks:
      - app_local_network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus-container
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
    volumes:
      - ./.docker/prometheus/prometheus.yaml:/etc/prometheus.yaml
    ports:
      - "9090:9090"
    networks:
      - app_local_network

  grafana:
    image: grafana/grafana:10.1.1
    container_name: grafana-container
    volumes:
      - ./.docker/grafana/datasource.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
    ports:
      - "3000:3000"
    networks:
      - app_local_network

  migrate:
    container_name: migrate-container
    user: "1000:1000"
    build:
      args:
        UID: "${UID:-1000}"
        GID: "${GID:-1000}"
      context: .
      dockerfile: .docker/migrate/Dockerfile
    volumes:
      - .:/app
    networks:
      - app_local_network

networks:
  app_local_network:

volumes:
  db_data:
  redis_data:
  tempo_data:
